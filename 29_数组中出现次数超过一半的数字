#include <iostream>
#include <vector>
using namespace std;

/*
题目描述

数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出0。
*/

class Solution 
{
public:
	int MoreThanHalfNum_Solution(vector<int> numbers) 
	{
		if (numbers.empty())
		{
			return 0;
		}
		int sz = numbers.size();
		vector<int> HashList;
		HashList.resize(numbers[0] + 1);
		for (int i = 0; i < sz; ++i)
		{
			if (numbers[i] + 1 > HashList.size())
			{
				HashList.resize(numbers[i] + 1);
			}
			++HashList[numbers[i]];
			if (HashList[numbers[i]] > sz / 2)
			{
				return numbers[i];
			}
		}
		return 0;
	}
};

void Test()
{
	vector<int> vi = { 1, 2, 3, 2, 2, 2, 5, 4, 2 };
	int ret = Solution().MoreThanHalfNum_Solution(vi);
	cout << ret << endl;
}
int main()
{
	Test();
	return 0;
}
