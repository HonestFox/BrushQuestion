#include <iostream>
#include <vector>
using namespace std;

/*
题目描述:
小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。
但是他并不满足于此,他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。
没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。
现在把问题交给你,你能不能也很快的找出所有和为S的连续正数序列?
输出描述:
输出所有和为S的连续正数序列。序列内按照从小至大的顺序，序列间按照开始数字从小到大的顺序
*/
class Solution
{
public:
	vector<vector<int> > FindContinuousSequence(int sum)
	{
		vector<vector<int> > ret;
		for (int i = 2; ( (sum / i) - (i / 2) ) >= 0; ++i)
		{
			vector<int> tmp;
			int index = 0;
			int begin = sum / i - i / 2;
			if (i % 2 == 0)
			{
				++begin;
			}
			
			if (begin <= 0)
			{
				continue;
			}
			//排除几种情况
			if (sum % 2 == 0)
			{
				if (i % 2 != 0 && sum % i != 0)
				{
					continue;
				}
				else if (i % 2 == 0 && (begin + begin + i - 1) * i / 2 != sum)
				{
					continue;
				}
			}
			else if (sum % 2 != 0 && i != 2)
			{
				if (i % 2 == 0)
				{
					continue;
				}
				else if (sum % i != 0)
				{
					continue;
				}
			}
			while (index < i)
			{
				int CurVal = begin;
				CurVal += index;
				tmp.push_back(CurVal);
				index++;
			}
			ret.push_back(tmp);
		}
		return ret;
	}
};

void Test()
{
	vector<vector<int> > ivvec;
	ivvec = Solution().FindContinuousSequence(9);
	for (int i = ivvec.size() - 1; i >= 0; --i)
	{
		int sum = 0;
		for (int j = 0; j < ivvec[i].size(); ++j)
		{
			cout << ivvec[i][j] << " ";
			sum += ivvec[i][j];
		}
		cout << "SUM: " << sum << endl;
	}
}
int main()
{
	Test();
	return 0;
}
