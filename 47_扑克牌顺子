#include <iostream>
#include <vector>
using namespace std;

/*
题目描述:
LL今天心情特别好,因为他去买了一副扑克牌,发现里面居然有2个大王,2个小王(一副牌原本是54张^_^)...他随机从中抽出了5张牌,想测测自己的手气,看看能不能抽到顺子,如果抽到的话,他决定去买体育彩票,嘿嘿！！
“红心A,黑桃3,小王,大王,方片5”,“Oh My God!”不是顺子.....LL不高兴了,他想了想,决定大\小 王可以看成任何数字,并且A看作1,J为11,Q为12,K为13。上面的5张牌就可以变成“1,2,3,4,5”(大小王分别看作2和4),“So Lucky!”。LL决定去买体育彩票啦。 现在,要求你使用这幅牌模拟上面的过程,然后告诉我们LL的运气如何。为了方便起见,你可以认为大小王是0
*/


//1 3 0 0 5
//0 0 1 3 5
//1 2 3 4 5

//0 0 0 2 5
//2 3 0 0 0 


//1 1 2 2 3
class Solution
{
public:
	bool IsContinuous(vector<int> numbers)
	{
		if (numbers.size() < 2)
		{
			return false;
		}
		int gap = 0;
		int count0 = 0;
		//排序
		sort(numbers);
		for (size_t i = 0; i < numbers.size() - 1; ++i)
		{
			if (numbers[i] == 0)
			{
				++count0;
			}
			else if (numbers[i] == numbers[i + 1])
			{
				return false;
			}
			else
			{
				gap += (numbers[i + 1] - numbers[i] - 1);
			}
		}
		return gap == 0 || gap == count0;
	}
protected:
	void sort(vector<int> &numbers)
	{
		for (size_t i = 0; i < numbers.size() - 1; ++i)
		{
			bool IsChanged = false;
			for (size_t j = 0; j < numbers.size() - 1; ++j)
			{
				if (numbers[j] > numbers[j + 1])
				{
					swap(numbers[j], numbers[j + 1]);
					IsChanged = true;
				}
			}
			if (!IsChanged)
			{
				return;
			}
		}
	}
};

//void TestSort()
//{
//	vector<int> ivec = { 1, 3, 5, 6, 8, 2, 11, 2 };
//	Solution().sort(ivec);
//	for (auto i : ivec)
//	{
//		cout << i << " ";
//	}
//	cout << endl;
//}


void Test()
{
	vector<int> ivec = { 1, 3, 0, 0, 5 };
	cout << Solution().IsContinuous(ivec) << endl;

	vector<int> ivec1 = { 1, 3, 2, 5, 4 };
	cout << Solution().IsContinuous(ivec1) << endl;

	vector<int> ivec2 = { 3, 0, 0, 0, 0 };
	cout << Solution().IsContinuous(ivec2) << endl;

	vector<int> ivec3 = { 2, 2, 4, 1, 0 };
	cout << Solution().IsContinuous(ivec3) << endl;
}

int main()
{
	//TestSort();
	Test();
	return 0;
}
