#include <iostream>

using namespace std;

struct TreeNode
{
	TreeNode(int val)
		:_left(NULL)
		,_right(NULL)
		,_val(val)
	{}
	TreeNode* _left;
	TreeNode* _right;
	int _val;
};

class BinaryTree
{
public:
	BinaryTree(TreeNode *root)
		:_root(root)
	{}

	bool IsBalance()
	{
		return _IsBlance(_root);
	}
protected:
	bool _IsBlance(TreeNode* root)
	{
		if (root == NULL)
			return true;

		int left = _Height(root->_left);
		int right = _Height(root->_right);

		if (abs(right - left) > 1)
		{
			cout << "pos: " << root->_val << endl;
			return false;
		}

		return _IsBlance(root->_left) && _IsBlance(root->_right);
	}

	int _Height(TreeNode* root)
	{
		if (root == NULL)
			return 0;

		int left = _Height(root->_left);
		int right = _Height(root->_right);

		return left>right ? left + 1 : right + 1;
	}

protected:
	TreeNode* _root;
};
int main()
{
	return 0;
}
